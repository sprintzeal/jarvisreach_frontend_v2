{
  "version": 3,
  "sources": ["../../react-linkedin-login-oauth2/src/useLinkedIn.tsx", "../../react-linkedin-login-oauth2/src/utils.ts", "../../react-linkedin-login-oauth2/src/LinkedIn.tsx", "../../react-linkedin-login-oauth2/src/LinkedInCallback.tsx"],
  "sourcesContent": ["import { useCallback, useEffect, useRef } from 'react';\nimport { useLinkedInType } from './types';\nimport { LINKEDIN_OAUTH2_STATE } from './utils';\n\nconst getPopupPositionProperties = ({ width = 600, height = 600 }) => {\n  const left = screen.width / 2 - width / 2;\n  const top = screen.height / 2 - height / 2;\n  return `left=${left},top=${top},width=${width},height=${height}`;\n};\n\nconst generateRandomString = (length = 20) => {\n  let result = '';\n  const characters =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  const charactersLength = characters.length;\n  for (let i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\nexport function useLinkedIn({\n  redirectUri,\n  clientId,\n  onSuccess,\n  onError,\n  scope = 'r_emailaddress',\n  state = '',\n  closePopupMessage = 'User closed the popup',\n}: useLinkedInType) {\n  const popupRef = useRef<Window>(null);\n  const popUpIntervalRef = useRef<number>(null);\n\n  const receiveMessage = useCallback(\n    (event: MessageEvent) => {\n      const savedState = localStorage.getItem(LINKEDIN_OAUTH2_STATE);\n      if (event.origin === window.location.origin) {\n        if (event.data.errorMessage && event.data.from === 'Linked In') {\n          // Prevent CSRF attack by testing state\n          if (event.data.state !== savedState) {\n            popupRef.current && popupRef.current.close();\n            return;\n          }\n          onError && onError(event.data);\n          popupRef.current && popupRef.current.close();\n        } else if (event.data.code && event.data.from === 'Linked In') {\n          // Prevent CSRF attack by testing state\n          if (event.data.state !== savedState) {\n            console.error('State does not match');\n            popupRef.current && popupRef.current.close();\n            return;\n          }\n          onSuccess && onSuccess(event.data.code);\n          popupRef.current && popupRef.current.close();\n        }\n      }\n    },\n    [onError, onSuccess],\n  );\n\n  useEffect(() => {\n    return () => {\n      window.removeEventListener('message', receiveMessage, false);\n\n      if (popupRef.current) {\n        popupRef.current.close();\n        popupRef.current = null;\n      }\n      if (popUpIntervalRef.current) {\n        window.clearInterval(popUpIntervalRef.current);\n        popUpIntervalRef.current = null;\n      }\n    };\n  }, [receiveMessage]);\n\n  useEffect(() => {\n    window.addEventListener('message', receiveMessage, false);\n    return () => {\n      window.removeEventListener('message', receiveMessage, false);\n    };\n  }, [receiveMessage]);\n\n  const getUrl = () => {\n    const scopeParam = `&scope=${encodeURI(scope)}`;\n    const generatedState = state || generateRandomString();\n    localStorage.setItem(LINKEDIN_OAUTH2_STATE, generatedState);\n    const linkedInAuthLink = `https://www.linkedin.com/oauth/v2/authorization?response_type=code&client_id=${clientId}&redirect_uri=${redirectUri}${scopeParam}&state=${generatedState}`;\n    return linkedInAuthLink;\n  };\n\n  const linkedInLogin = () => {\n    popupRef.current?.close();\n    popupRef.current = window.open(\n      getUrl(),\n      '_blank',\n      getPopupPositionProperties({ width: 600, height: 600 }),\n    );\n\n    if (popUpIntervalRef.current) {\n      window.clearInterval(popUpIntervalRef.current);\n      popUpIntervalRef.current = null;\n    }\n    popUpIntervalRef.current = window.setInterval(() => {\n      try {\n        if (popupRef.current && popupRef.current.closed) {\n          window.clearInterval(popUpIntervalRef.current);\n          popUpIntervalRef.current = null;\n          if (onError) {\n            onError({\n              error: 'user_closed_popup',\n              errorMessage: closePopupMessage,\n            });\n          }\n        }\n      } catch (error) {\n        console.error(error);\n        window.clearInterval(popUpIntervalRef.current);\n        popUpIntervalRef.current = null;\n      }\n    }, 1000);\n  };\n\n  return {\n    linkedInLogin,\n  };\n}\n", "export const LINKEDIN_OAUTH2_STATE = 'linkedin_oauth2_state';\n\nexport function parse(search) {\n  const query = search.substring(1);\n  const vars = query.split('&');\n  const parsed = {};\n  for (let i = 0; i < vars.length; i++) {\n    const pair = vars[i].split('=');\n    if (pair.length > 1) {\n      parsed[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n  }\n  return parsed;\n}\n", "import { LinkedInType } from './types';\nimport { useLinkedIn } from './useLinkedIn';\n\nexport function LinkedIn({\n  children,\n  redirectUri,\n  clientId,\n  onSuccess,\n  onError,\n  state,\n  scope,\n  closePopupMessage,\n}: LinkedInType) {\n  const { linkedInLogin } = useLinkedIn({\n    redirectUri,\n    clientId,\n    onSuccess,\n    onError,\n    state,\n    scope,\n    closePopupMessage,\n  });\n  return children({ linkedInLogin });\n}\n", "import { useEffect, useState } from 'react';\nimport { LINKEDIN_OAUTH2_STATE, parse } from './utils';\n\ntype ParamsType = {\n  state: string;\n  code?: string;\n  error?: string;\n  error_description?: string;\n};\n\nexport function LinkedInCallback() {\n  const [errorMessage, setErrorMessage] = useState<string>('');\n  useEffect(() => {\n    const params = parse(window.location.search) as ParamsType;\n    if (params.state !== localStorage.getItem(LINKEDIN_OAUTH2_STATE)) {\n      setErrorMessage('State does not match');\n    } else if (params.error) {\n      const errorMessage =\n        params.error_description || 'Login failed. Please try again.';\n      window.opener &&\n        window.opener.postMessage(\n          {\n            error: params.error,\n            state: params.state,\n            errorMessage,\n            from: 'Linked In',\n          },\n          window.location.origin,\n        );\n      // Close tab if user cancelled login\n      if (params.error === 'user_cancelled_login') {\n        window.close();\n      }\n    }\n    if (params.code) {\n      window.opener &&\n        window.opener.postMessage(\n          { code: params.code, state: params.state, from: 'Linked In' },\n          window.location.origin,\n        );\n    }\n  }, []);\n\n  return <div>{errorMessage}</div>;\n}\n"],
  "mappings": "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",
  "names": ["useLinkedIn", "_a", "redirectUri", "clientId", "onSuccess", "onError", "_b", "scope", "_c", "state", "_d", "closePopupMessage", "popupRef", "useRef", "popUpIntervalRef", "receiveMessage", "useCallback", "event", "savedState", "localStorage", "getItem", "origin", "window", "location", "data", "errorMessage", "from", "current", "close", "code", "useEffect", "removeEventListener", "clearInterval", "addEventListener", "getUrl", "scopeParam", "encodeURI", "generatedState", "length", "result", "characters", "charactersLength", "i", "charAt", "Math", "floor", "random", "generateRandomString", "setItem", "linkedInLogin", "e", "open", "width", "r", "height", "t", "screen", "setInterval", "closed", "error", "LinkedIn", "children", "LinkedInCallback", "useState", "setErrorMessage", "params", "search", "vars", "substring", "split", "parsed", "pair", "decodeURIComponent", "errorMessage_1", "error_description", "opener", "postMessage", "_jsx"]
}
